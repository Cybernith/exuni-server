"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import datetime
import sys

from server.configs import Databases, RequestLogs


DEV_MODE = False
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SERVER_URL = 'http://127.0.0.1:7000' if DEV_MODE else 'http://exuni.shop'
FRONT_URL = 'http://127.0.0.1:8080' if DEV_MODE else 'http://app.exuni.shop'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$+%$*+x%$g#+@4%a*0^)oew9rewz)n-&=cd&-yh0fzjh2=vh(d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DATA_UPLOAD_MAX_MEMORY_SIZE = 100000000
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admindocs',
    'django.contrib.postgres',
    'location_field.apps.DefaultConfig',

    'debug_toolbar',
    'nested_admin',

    'rest_framework',
    'corsheaders',
    'django_filters',
    'django_fsm',
    'import_export',
    'wkhtmltopdf',
    'rest_framework_swagger',
    'rest_framework.authtoken',
    'django_extensions',
    'colorfield',
    'drf_spectacular',
    'users',
    'home',
    'main',
    'products.apps.ProductsConfig',
    'entrance',
    'affiliate',
    'subscription',
    'packing',
    'reports',
    'shop',
    'cms',
    'crm.apps.CrmConfig',
    'financial_management',

]

LOCATION_FIELD = {
    'provider.google.api': '//maps.google.com/maps/api/js?sensor=false',
    'provider.google.api_key': '<PLACE YOUR API KEY HERE>',
    'provider.google.api_libraries': '',
    'provider.google.map.type': 'ROADMAP',
}
ALLOWED_HOSTS = ['*']

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',

    'helpers.middlewares.modify_request_middleware.ModifyRequestMiddleware',

    'helpers.middlewares.check_token_expiration.CheckTokenExpiration',

    'helpers.middlewares.log_request_middleWare.LogRequestMiddleware',

    'debug_toolbar.middleware.DebugToolbarMiddleware',

]

ROOT_URLCONF = 'server.urls'

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'access-control-allow-origin',
    'Access-Control-Allow-Origin',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = Databases

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

# USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',

    'EXCEPTION_HANDLER': 'helpers.exception_handlers.custom_exception_handler',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'helpers.auth.TokenAuthSupportQueryString',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter',
    ),
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'verification_code': '5/hours',
        'sync_all_data': '10/min',
    },
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'helpers.parser.NestedMultipartParser'
    ]
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Exuni Store API',
    'DESCRIPTION': 'اسکیما فقط برای APIهای بخش فروشگاه',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'PREPROCESSING_HOOKS': [
        'server.schema_hooks.filter_store_endpoints',
    ],
}
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # مقصد collectstatic

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # سورس فایل‌های استاتیکت در زمان توسعه
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

DEFAULT_FILE_STORAGE = 'server.storage.CustomUploadStorage'

AUTH_USER_MODEL = 'users.User'

TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'
DEVELOPING = (sys.argv[1] == 'runserver')

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

INTERNAL_IPS = [
    # '127.0.0.1',
    # '185.239.105.10'
]

# DEBUG_TOOLBAR_CONFIG = {
#     "SHOW_TOOLBAR_CALLBACK": lambda request: True,
# }

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "telegram": {
            "format": "%(levelname)s \\| %(asctime)s \\| %(name)s\n%(message)s",
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
    "handlers": {
        "console": {
            "level": "ERROR",
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "ERROR",
            "propagate": True,
        },
    },
}

TELEGRAM_BOT_TOKEN = ''
TELEGRAM_REPORT_CHANNEL_ID = ''

if not DEBUG:
    LOGGING["handlers"]["telegram"] = {
        "level": "ERROR",
        "class": "server.logs.SyncTelegramLoggingHandler",
        "bot_token": TELEGRAM_BOT_TOKEN,
        "chat_id": TELEGRAM_REPORT_CHANNEL_ID,
        "formatter": "telegram",
    }

    LOGGING["loggers"]["django"]["handlers"].append("telegram")

RECAPTCHA_PRIVATE_KEY = '6Lda3sYaAAAAANqk8giZj98V7vKmB-FRGWp0PNE7'

APP_SHORT_LINK = "yun.ir/x6bfw"

DATE_FORMAT = '%Y/%m/%d'
TIME_FORMAT = '%H:%M'
DATETIME_FORMAT = "{} {}".format(DATE_FORMAT, TIME_FORMAT)

DATA_UPLOAD_MAX_NUMBER_FIELDS = 4096

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

OPENAI_API_KEY = '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'

SMS_IR_API_KEY = 'pdeR38lAboNkpR9AJrWgwWn2vgtbxjfccHRMt3SOeB1lD2Nq74ZnBFG3pSEF9VSe'
SMS_IR_LINE_NUMBER = 30007732903879


WC_C_KEY = 'ck_0751fb1e2273e7c62b8772960e4561ac6cd30a3b'
WC_C_SECRET = 'cs_ed6d33ede59c8a138097c4ae3cac91d2c3363604'
TEMP_DIR = '/tmp'
